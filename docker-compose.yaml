services:
  nginx:
    build: 
      dockerfile: ./proxy/Dockerfile
      context: .
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - '8080:80'
    volumes:
      - ./web/src:/usr/share/nginx/html
    depends_on:
      - web
    networks:
      - nwproject
      # - backend
      # - database

  # my-database:
  #   build: 
  #     dockerfile: ./databse/Dockerfile
  #     context: .
  #   image: my-db:v1
  #   networks:
  #     - nwproject
  #   volumes:
  #     - ./migrations:/flyway/sql/migrations:rw,z
  #   env_file: .environment
  
  web:
    build:
      dockerfile: ./web/Dockerfile
      context: .
    image: frontend:v1
    container_name: web
    ports:
      - '3000'
    networks:
      - nwproject
    volumes:
      - ./project:/usr/src/app/
    environment:
      - NODE_ENV=dev

  api:
    build:
      dockerfile: ./api/Dockerfile
      context: .
    image: backend:v1
    container_name: api
    ports:
      - '4000'
    networks: 
      - nwproject

networks:
  nwproject:
    driver: bridge

# volumes:
#   pgdata: /var/lib/postgresql/data/