services:
  nginx:
    build: 
      dockerfile: ./proxy/Dockerfile
      context: .
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - '8080:80'
    volumes:
      - ./web:/usr/share/nginx/html
    depends_on:
      - web
      - api
    # networks:
    #   - nwproject

  database:
    build: 
      dockerfile: ./database/Dockerfile
      context: .
    image: my-database:v1
    container_name: database
    # networks:
    #   - nwproject
    volumes:
      - ./database/migrations:/flyway/sql/migrations:rw,z
      - ./database/volume/:/var/lib/postgresql/data/
    env_file: .environment
  
  web:
    build:
      dockerfile: ./web/Dockerfile
      context: .
    image: frontend:v1
    container_name: web
    ports:
      - '3000:3000'
    # networks:
    #   - nwproject
    volumes:
      - ./volume:/usr/src/app/
    environment:
      - NODE_ENV=dev
    depends_on:
      - database

  api:
    build:
      dockerfile: ./api/Dockerfile
      context: .
    image: backend:v1
    container_name: api
    ports:
      - '4000'
    networks: 
      - nwproject
    depends_on:
      - database

networks:
  nwproject:
    driver: bridge
